/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DemoOracle, DemoOracleInterface } from "../DemoOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IStdReference",
        name: "_ref",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
    ],
    name: "getPriceUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161061d38038061061d83398101604081905261002f91610204565b600080546001600160a01b0319166001600160a01b03831617815560408051808201909152600381526208aa8960eb1b602080830191825273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9093526001909252516100b0917fde3e59ea0eeb6a65f16dd826b7bdfb53723c09ad80c81d458bbf2e138d91852391610171565b5060408051808201909152600381526221a5a160e91b602080830191825260008052600190529051610103917fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4991610171565b5060408051808201909152600381526242544360e81b602080830191825273bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb60005260019052905161016a917f8f22848572deaf321ecb41095a0a57d3f19eda24b92a3f4a8e554a2e56f45bc491610171565b5050610232565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101b257805160ff19168380011785556101df565b828001600101855582156101df579182015b828111156101df5782518255916020019190600101906101c4565b506101eb9291506101ef565b5090565b5b808211156101eb57600081556001016101f0565b600060208284031215610215578081fd5b81516001600160a01b038116811461022b578182fd5b9392505050565b6103dc806102416000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635708447d1461003b578063ac41865a14610064575b600080fd5b61004e6100493660046101fb565b610077565b60405161005b9190610391565b60405180910390f35b61004e61007236600461021d565b610117565b60006100816101c3565b600080546001600160a01b0385811683526001602052604092839020925163195556f360e21b81529116916365555bcc916100bf9190600401610359565b60606040518083038186803b1580156100d757600080fd5b505afa1580156100eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010f9190610251565b519392505050565b60006101216101c3565b600080546001600160a01b03868116835260016020526040808420878316855293819020905163195556f360e21b815291909216926365555bcc926101689260040161032b565b60606040518083038186803b15801561018057600080fd5b505afa158015610194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b89190610251565b519150505b92915050565b60405180606001604052806000815260200160008152602001600081525090565b80356001600160a01b03811681146101bd57600080fd5b60006020828403121561020c578081fd5b61021683836101e4565b9392505050565b6000806040838503121561022f578081fd5b61023984846101e4565b915061024884602085016101e4565b90509250929050565b600060608284031215610262578081fd5b6040516060810181811067ffffffffffffffff82111715610281578283fd5b80604052508251815260208301516020820152604083015160408201528091505092915050565b600081546001808216600081146102c657600181146102e457610322565b60028304607f16865260ff1983166020870152604086019350610322565b600283048087526102f48661039a565b60005b828110156103185781546020828b01015284820191506020810190506102f7565b8801602001955050505b50505092915050565b60006040825261033e60408301856102a8565b828103602084015261035081856102a8565b95945050505050565b60006040825261036c60408301846102a8565b828103602084015260038152621554d160ea1b60208201526040810191505092915050565b90815260200190565b6000908152602090209056fea2646970667358221220ad250324922a160090cb16b0659f741e3764b5e75486426b7f5cd80d9d14dbdf64736f6c634300060c0033";

export class DemoOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _ref: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DemoOracle> {
    return super.deploy(_ref, overrides || {}) as Promise<DemoOracle>;
  }
  getDeployTransaction(
    _ref: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ref, overrides || {});
  }
  attach(address: string): DemoOracle {
    return super.attach(address) as DemoOracle;
  }
  connect(signer: Signer): DemoOracle__factory {
    return super.connect(signer) as DemoOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoOracleInterface {
    return new utils.Interface(_abi) as DemoOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DemoOracle {
    return new Contract(address, _abi, signerOrProvider) as DemoOracle;
  }
}
