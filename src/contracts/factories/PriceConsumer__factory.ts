/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceConsumer, PriceConsumerInterface } from "../PriceConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "feedRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101883803806101888339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610123806100656000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638e15f47314602d575b600080fd5b60336045565b60408051918252519081900360200190f35b600080546040805163bcfd032d60e01b815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee600482015261034860248201529051839283928392839283926001600160a01b039091169163bcfd032d9160448082019260a092909190829003018186803b15801560b657600080fd5b505afa15801560c9573d6000803e3d6000fd5b505050506040513d60a081101560de57600080fd5b5060200151955050505050509056fea26469706673582212209a9011d28bd982a27dd7a2e98adbaa5dc2220cb40326b731e0136e0c72187ea664736f6c634300060c0033";

export class PriceConsumer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    feedRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceConsumer> {
    return super.deploy(
      feedRegistry,
      overrides || {}
    ) as Promise<PriceConsumer>;
  }
  getDeployTransaction(
    feedRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(feedRegistry, overrides || {});
  }
  attach(address: string): PriceConsumer {
    return super.attach(address) as PriceConsumer;
  }
  connect(signer: Signer): PriceConsumer__factory {
    return super.connect(signer) as PriceConsumer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceConsumerInterface {
    return new utils.Interface(_abi) as PriceConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceConsumer {
    return new Contract(address, _abi, signerOrProvider) as PriceConsumer;
  }
}
