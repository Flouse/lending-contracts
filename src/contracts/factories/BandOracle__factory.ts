/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BandOracle, BandOracleInterface } from "../BandOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "baseCurrencyUnit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baseCurrency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseCurrencyUnit",
        type: "uint256",
      },
    ],
    name: "BaseCurrencySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY_UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "getAssetsPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161071c38038061071c8339818101604052606081101561003357600080fd5b5080516020820151604090920151909190600061004e61010f565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319166001600160a01b0385811691909117909155606083901b6001600160601b03191660805260a0829052604080518381529051918416917fe27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c1916020908290030190a2505050610113565b3390565b60805160601c60a0516105d96101436000398061029452806103a1525080610366528061044d52506105d96000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639d23d9f21161005b5780639d23d9f2146100ca578063b3596f071461018a578063e19f4700146101b0578063f2fde38b146101b85761007d565b8063715018a6146100825780638c89b64f1461008c5780638da5cb5b146100a6575b600080fd5b61008a6101de565b005b610094610292565b60408051918252519081900360200190f35b6100ae6102b6565b604080516001600160a01b039092168252519081900360200190f35b61013a600480360360208110156100e057600080fd5b8101906020810181356401000000008111156100fb57600080fd5b82018360208201111561010d57600080fd5b8035906020019184602083028401116401000000008311171561012f57600080fd5b5090925090506102c5565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561017657818101518382015260200161015e565b505050509050019250505060405180910390f35b610094600480360360208110156101a057600080fd5b50356001600160a01b0316610362565b6100ae61044b565b61008a600480360360208110156101ce57600080fd5b50356001600160a01b031661046f565b6101e6610579565b6000546001600160a01b03908116911614610248576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031690565b6060808267ffffffffffffffff811180156102df57600080fd5b50604051908082528060200260200182016040528015610309578160200160208202803683370190505b50905060005b8381101561035a5761033b85858381811061032657fe5b905060200201356001600160a01b0316610362565b82828151811061034757fe5b602090810291909101015260010161030f565b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156103c557507f0000000000000000000000000000000000000000000000000000000000000000610446565b60015460408051635708447d60e01b81526001600160a01b03858116600483015291516000939290921691635708447d91602480820192602092909190829003018186803b15801561041657600080fd5b505afa15801561042a573d6000803e3d6000fd5b505050506040513d602081101561044057600080fd5b50519150505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610477610579565b6000546001600160a01b039081169116146104d9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661051e5760405162461bcd60e51b815260040180806020018281038252602681526020018061057e6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212208930d6f1c305514bb87cc186d5ea6db983e1b420454ecb83625553abd905a3f464736f6c634300060c0033";

export class BandOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    provider: string,
    baseCurrency: string,
    baseCurrencyUnit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BandOracle> {
    return super.deploy(
      provider,
      baseCurrency,
      baseCurrencyUnit,
      overrides || {}
    ) as Promise<BandOracle>;
  }
  getDeployTransaction(
    provider: string,
    baseCurrency: string,
    baseCurrencyUnit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      provider,
      baseCurrency,
      baseCurrencyUnit,
      overrides || {}
    );
  }
  attach(address: string): BandOracle {
    return super.attach(address) as BandOracle;
  }
  connect(signer: Signer): BandOracle__factory {
    return super.connect(signer) as BandOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BandOracleInterface {
    return new utils.Interface(_abi) as BandOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BandOracle {
    return new Contract(address, _abi, signerOrProvider) as BandOracle;
  }
}
